service: serverles-ex
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-southeast-1
  stage: dev
  httpApi:
    cors: true

plugins:
  - serverless-offline

functions:
  getAllCompanies: 
    handler: handler.getAllCompanies
    events:
      - httpApi: 
          path: /companies
          method: get

  getAllCompaniesById: 
    handler: handler.getAllCompaniesById
    events:
      - httpApi: 
          path: /companies/{company_id}
          method: get
  
  createCompany:
    handler: handler.createCompany
    events:
      - httpApi: 
          path: /newCompany
          method: post
  
  editCompanyDetails:
    handler: handler.editCompanyDetails
    events:
      - httpApi:
          path: /editCompany/{company_id}
          method: put

  archiveCompany:
    handler: handler.archiveCompany
    events:
      - httpApi:
          path: /archiveCompany/{company_id}
          method: delete
  
  getTeamByCompany:
    handler: handler.getTeamByCompany
    events:
      - httpApi:
          path: /team/{company_name}
          method: get

  getTeamById:
    handler: handler.getTeamById
    events:
      - httpApi:
          path: /teamId/{id}
          method: get
  
  createTeam:
    handler: handler.createTeam
    events:
      - httpApi:
          path: /createTeam/{id}
          method: post
  
  editTeam:
    handler: handler.editTeam
    events: 
      - httpApi:
          path: /editTeam/{team_id}
          method: put

  archiveTeam:
    handler: handler.archiveTeam
    events:
      - httpApi:
          path: /archiveTeam/{team_id}
          method: delete
  
  getEmployeeByCompany:
    handler: handler.getEmployeeByCompany
    events:
      - httpApi: 
          path: /employee/{company_name}
          method: get

  getEmployeeByTeam:
    handler: handler.getEmployeeByTeam
    events:
      -  httpApi:
          path: /employeeByTeam/{team_name}
          method: get
  
  getEmployeeById:
    handler: handler.getEmployeeById
    events:
    - httpApi:
        path: /employeeById/{id}
        method: get
  
  createEmployee:
    handler: handler.createEmployee
    events: 
      - httpApi:
          path: /newEmployee
          method: post

  editEmployee:
    handler: handler.editEmployee
    events:
      - httpApi:
          path: /editEmployee/{emp_id}
          method: put
  
  archiveEmployee:
    handler: handler.archiveEmployee
    events:
      - httpApi:
          path: /delEmployee/{emp_id}
          method: delete